services:
  es01:
    ports:
      - 9200:9200
      - 9300:9300
    environment:  
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - cluster.initial_master_nodes=es01
      - node.name=es01
      - cluster.name=docker-cluster
      - ELASTIC_PASSWORD=changeme
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/"]
      interval: 10s
      timeout: 10s
      retries: 10
    mem_limit: 2048m

  rabbitmq:
    image: rabbitmq:3.11-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_NODENAME=rabbit@rabbitmq
      - RABBITMQ_LOGS=- 
      - RABBITMQ_SASL_LOGS=- 
      - RABBITMQ_MNESIA_BASE=/var/lib/rabbitmq/mnesia/rabbit@rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 10s
      retries: 10

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.1
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://es01:9200
    depends_on:
      - es01

  redis:
    image: redis/redis-stack:latest
    ports:
      - 6379:6379
      - 8001:8001
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 10


  data_gen:
    build: ../data_generator
    environment:
      - RABBITMQ_HOST=rabbitmq
      - REDIS_HOST=redis
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  data_proc:
    build: ../data_processor
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  backend_logic:
    build: ../backend/app
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ELASTICSEARCH_HOST=es01:9200
    depends_on:
      rabbitmq:
        condition: service_healthy
      es01:
        condition: service_healthy

  api:
    build: ../API/api
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - 5000:8081

  frontend:
    build: ../frontend
    ports:
      - 3000:3000
